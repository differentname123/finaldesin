0121：
	成果：
	1.确定了大概声音收集的框架，即采用VS1053作为主芯片，进行音频采集

	疑问：
	1.战舰V3配套的是wav格式，我需要的是pcm裸数据

	下一步：
	1.声音文件识别的优化与封装
	2.架构出采集到数据的转存与发送结构
0123：
	成果：
	1.完成了关键字提取代码的编写

	疑问：
	1.不知到单片机是否能直接上传文件给服务端
	
	下一步：
	1.完成服务端，文件的转写和关键字提取的整合

0128：
	成果：
	1.完成服务端的大体架构，及开三个线程，并完成了一部分pcm转string线程的代码和文件接收代码
	疑问：
	1.还未接触pcm文件上传的咨询，心里没底
	下一步：
	1.完成服务端除pcm接收的代码

0219：
	成果：
	1.重新开始工作	
	下一步： 
	1.关键字的提取（正则表达）和总结
	2.利用datainputstream （与文件类型无关的流）完成pcm文件的发送与接收，完成后直接移植放到核心板上
0220：
	成果：
	1.完成关键字的提取
	下一步：
	1.明天早上完成三个线程的所有配合
	2.下午完成pcm文件的传输，并利用单片机采集声音
0228：
	成果：
	1.上传到gitbhub对项目进行了更加合理的管理
	2.完成了智能策略的构思并且实现了策略一（挖掘待做的事情）
	下一步：
	1.接着完成其他两大策略（情绪图，关键词 词云）

0301：
	成果：
	1.完成情绪数据的分析存储
	2.将文件操作规范了一下，用文件工具类来管理

	下一步：
	1.第一个语音转str的准确率应该要提高（比如采用两次提交，选择其中好的作为结果）
	2.玩成第三个策略的编写（思路：写一个接口，能分析出最近x时间内的n大关键词，并给出权重）

0302：
	成果：
	1.完成了第三策略（最近time时间内的前k关键词）
	2.进行了两次语音识别提交的编写（但速度太慢）
	下一步：
	1.收集足够pcm文件包括大小不同的，内容不同（需要有满足策略1的内容（表未来待做的事））
	2.收集足够多的音频文件开始进行已有模块的测试（主要是测语音识别），并且得到几组不同情况的最优解（比如音频文件在100kb以下的延时和分片大小组合）

0303：
	成果：
	1.完成了终端需求的分析和整体架构（即四大界面）
	2.完成了语音识别的测试代码（找到最合适的分片和延时比例），但pcm用例不足
	3.完成了终端和服务端关键字获取和心情值获取两个功能（写好了相应代码并测试）
	下一步：
	1.完成个人报告所需数据（最多的词  最多话的时间点 最沉默的时间 各大词性的个数和比例）的生成分析
	2.完成终端和服务端其他两个功能（预测的事件获取   个人报告）的打通
0304：
	成果：
	1.录制了新的pcm测试文件
	2.完成了服务端和终端四大功能（数据也分析出来了）的请求与相应
	3.运行了android studio的图表开源项目
	下一步：
	1.把各个模块开源项目成功运行，然后再综合。
	2.理清单片机的音频采集功能